// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.2.1
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Financial.Spec
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.2.1")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Amortización de Cuotas")]
    public partial class AmortizacionDeCuotasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PaymentCalendar.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("es-ES"), "Amortización de Cuotas", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancelación de la Primera Cuota")]
        public virtual void CancelacionDeLaPrimeraCuota()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelación de la Primera Cuota", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("Credito con Capital 5000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 7
testRunner.And("Interes 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 8
testRunner.And("Plazo 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 9
testRunner.And("No Registra Pagos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 10
testRunner.And("No esta vencido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 11
testRunner.When("Se Paga 550.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 12
testRunner.Then("La 1ra Cuota debe estar Cancelada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Amortización de la Primera Cuota")]
        public virtual void AmortizacionDeLaPrimeraCuota()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Amortización de la Primera Cuota", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
testRunner.Given("Credito con Capital 5000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 16
testRunner.And("Interes 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 17
testRunner.And("Plazo 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 18
testRunner.And("No Registra Pagos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 19
testRunner.And("No esta vencido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 20
testRunner.When("Se Paga 300.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 21
testRunner.Then("La 1ra Cuota NO debe estar Cancelada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line 22
testRunner.And("Saldo Capital es 250.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 23
testRunner.And("Saldo Interes es 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Amortización de la Primera Cuota con Mora")]
        public virtual void AmortizacionDeLaPrimeraCuotaConMora()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Amortización de la Primera Cuota con Mora", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
testRunner.Given("Credito con Capital 5000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
testRunner.And("Interes 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 28
testRunner.And("Plazo 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 29
testRunner.And("No Registra Pagos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 30
testRunner.And("Esta Vencido 30 dias", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 31
testRunner.When("Se Paga 300.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 32
testRunner.Then("La 1ra Cuota NO debe estar Cancelada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line 33
testRunner.And("Saldo Capital es 280.00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 34
testRunner.And("Saldo Interes es 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 35
testRunner.And("Tiene Mora Pagada por 30", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
